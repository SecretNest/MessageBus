<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Naming</title><meta name="Title" content="Naming" /><meta name="Help.Id" content="d7081600-72be-4eac-928d-6bd753efab2f" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="d7081600-72be-4eac-928d-6bd753efab2f" /><meta name="Description" content="Message name is the only condition to match subscribers to publishers." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">SecretNest.MessageBus</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Naming</h1><div><p>Message name is the only condition to match subscribers to publishers.</p></div><h2 id="Sequence" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Name Matching</h2><div id="IDBABSection"><p>MessageBus uses only name to match subscribers to publishers.</p><p>When publisher registering, each existing subscriber is checked to see whether the name matches the publisher. When subscriber registering, it is checked against each existing publisher for name matching and saved in pool for further publisher registering.</p></div><h2 id="Matching" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Matching Method</h2><div id="IDCABSection"><p>MessageBus supports multiple ways to check the message name.</p><p>Each publisher has one name specified exactly when registering. Each subscriber is supported to use multiple way to match one or more publishers by name. This demo presents multiple ways for name matching.</p><div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-CSharp"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> TestMethod()
{
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">using</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> bus = <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageBus();
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberExact1Ticket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hello"</span>, SubscriberExact1);
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberExact2Ticket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"hello"</span>, SubscriberExact2);
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberIgnoreCaseTicket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageNameMatchingWithStringComparison(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"HELLO"</span>, StringComparison.OrdinalIgnoreCase), SubscriberIgnoreCase);
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberAllTicket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageNameMatchingAll(), SubscriberAll);
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberRegEx1Ticket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageNameMatchingWithRegularExpression(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"[Hh]ello"</span>), SubscriberRegEx1);
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberRegEx2Ticket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageNameMatchingWithRegularExpression(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"hello"</span>), SubscriberRegEx2);

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> text = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hello World"</span>;

    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> publisherTicket = bus.RegisterPublisher&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hello"</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageBusPublisherOptions&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">true</span>));
    publisherTicket.Executor.Execute(text);

    bus.UnregisterPublisher(publisherTicket);
    bus.UnregisterSubscriber(subscriberExact1Ticket);
    bus.UnregisterSubscriber(subscriberExact2Ticket);
    bus.UnregisterSubscriber(subscriberIgnoreCaseTicket);
    bus.UnregisterSubscriber(subscriberAllTicket);
    bus.UnregisterSubscriber(subscriberRegEx1Ticket);
    bus.UnregisterSubscriber(subscriberRegEx2Ticket);

    <span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">//after being executed: _exact1, _ignoreCase, _all and _regex1 are equal to text; _exact2 and _regex2 are not.</span>
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">private</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>? _exact1, _exact2, _ignoreCase, _all, _regex1 , _regex2;

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> SubscriberExact1(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>? argument)
{
    _exact1 = argument;
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> SubscriberExact2(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>? argument)
{
    _exact2 = argument;
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> SubscriberIgnoreCase(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>? argument)
{
    _ignoreCase = argument;
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> SubscriberAll(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>? argument)
{
    _all = argument;
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> SubscriberRegEx1(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>? argument)
{
    _regex1 = argument;
}

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">void</span> SubscriberRegEx2(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>? argument)
{
    _regex2 = argument;
}</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vbnet"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span> TestMethod()
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Using</span> bus <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">As</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageBus
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberExact1Ticket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hello"</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> subscriberExact1)
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberExact2Ticket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"hello"</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberExact2)
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberIgnoreCaseTicket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageNameMatchingWithStringComparison(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"HELLO"</span>, StringComparison.OrdinalIgnoreCase), <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberIgnoreCase)
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberAllTicket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageNameMatchingAll, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberAll)
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberRegEx1Ticket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageNameMatchingWithRegularExpression(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"[Hh]ello"</span>), <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberRegEx1)
        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberRegEx2Ticket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageNameMatchingWithRegularExpression(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"hello"</span>), <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberRegEx2)

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> text = <span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hello World"</span>

        <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> publisherTicket = bus.RegisterPublisher(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hello"</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageBusPublisherOptions(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">True</span>))
        publisherTicket.Executor.Execute(text)

        bus.UnregisterPublisher(publisherTicket)
        bus.UnregisterSubscriber(subscriberExact1Ticket)
        bus.UnregisterSubscriber(subscriberExact2Ticket)
        bus.UnregisterSubscriber(subscriberIgnoreCaseTicket)
        bus.UnregisterSubscriber(subscriberAllTicket)
        bus.UnregisterSubscriber(subscriberRegEx1Ticket)
        bus.UnregisterSubscriber(subscriberRegEx2Ticket)
<span class="comment" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        'after being executed: _exact1, _ignoreCase, _all and _regex1 are equal to text; _exact2 and _regex2 are not.</span>
    <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">End</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Using</span>
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">End</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span>

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Private</span> _exact1, _exact2, _ignoreCase, _all, _regex1, _regex2 <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">As</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span> SubscriberExact1(argument <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">As</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)
    _exact1 = argument
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">End</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span>

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span> SubscriberExact2(argument <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">As</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)
    _exact2 = argument
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">End</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span>

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span> SubscriberIgnoreCase(argument <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">As</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)
    _ignoreCase = argument
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">End</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span>

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span> SubscriberAll(argument <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">As</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)
    _all = argument
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">End</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span>

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span> SubscriberRegEx1(argument <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">As</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)
    _regex1 = argument
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">End</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span>

<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Public</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span> SubscriberRegEx2(argument <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">As</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)
    _regex2 = argument
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">End</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Sub</span></code></pre></div></div><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Note</p></div><div class="message-body"><p>In the code above, the publisher is registered with <a href="P_SecretNest_MessageBus_Options_MessageBusPublisherOptionsBase_IsAlwaysExecuteAll.htm">IsAlwaysExecuteAll</a> is on. This forces MessageBus to run through all matched subscribers. Check <a href="5df5be11-e1c0-4f83-9607-134a06f727ec.htm#OptionIsAlwaysExecuteAll">this topic</a> for details.</p></div></article><h4 id="MatchingExact" class="quickLinkHeader">Exact Matching</h4><p>Matches base on the message name comparison exactly. This is the default behaviour.</p><p>When subscriber is registered with a message name specified, the string is used to compare with each publisher exactly.</p><div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-CSharp"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberExact1Ticket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hello"</span>, SubscriberExact1);
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberExact2Ticket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"hello"</span>, SubscriberExact2);</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vbnet"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberExact1Ticket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"Hello"</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> subscriberExact1)
<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberExact2Ticket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"hello"</span>, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberExact2)</code></pre></div></div><p>The comparison is case sensitive. The first subscriber matches <q>Hello</q>, which is equal to the name provided by publisher, allowing to be executed when publisher requests. The second one matching <q>hello</q>, which is not equal to <q>Hello</q>, will not be executed by the publisher in this demo.</p><h4 id="MatchingString" class="quickLinkHeader">String Matching</h4><p>When subscriber is registered with an instance of <a href="T_SecretNest_MessageBus_MessageNameMatching_MessageNameMatchingWithStringComparison.htm">MessageNameMatchingWithStringComparison</a>, <a href="https://docs.microsoft.com/dotnet/api/system.stringcomparison" target="_blank" rel="noopener noreferrer">StringComparison</a> can be specified to be used in comparison. The default value is <a href="https://docs.microsoft.com/dotnet/api/system.stringcomparison" target="_blank" rel="noopener noreferrer">OrdinalIgnoreCase</a>.</p><p>In this case, <q>HELLO</q> is matched with <q>Hello</q>, which is indicated with publisher registering, based on <a href="https://docs.microsoft.com/dotnet/api/system.stringcomparison" target="_blank" rel="noopener noreferrer">OrdinalIgnoreCase</a>. This subscriber will be executed.</p><div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-CSharp"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberIgnoreCaseTicket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageNameMatchingWithStringComparison(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"HELLO"</span>, StringComparison.OrdinalIgnoreCase), SubscriberIgnoreCase);</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vbnet"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberIgnoreCaseTicket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageNameMatchingWithStringComparison(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"HELLO"</span>, StringComparison.OrdinalIgnoreCase), <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberIgnoreCase)</code></pre></div></div><h4 id="MatchingAll" class="quickLinkHeader">All Matching</h4><p>When an instance of <a href="T_SecretNest_MessageBus_MessageNameMatching_MessageNameMatchingAll.htm">MessageNameMatchingAll</a> is provided, the subscriber hooks all publishers, including existing and to be registered later.</p><div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-CSharp"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberAllTicket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageNameMatchingAll(), SubscriberAll);</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vbnet"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberAllTicket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageNameMatchingAll, <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberAll)</code></pre></div></div><h4 id="MatchingRegEx" class="quickLinkHeader">Regular Expression Matching</h4><p>A regular expression wrapped by <a href="T_SecretNest_MessageBus_MessageNameMatching_MessageNameMatchingWithRegularExpression.htm">MessageNameMatchingWithRegularExpression</a> declares to use expression specified in name matching.</p><div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-CSharp"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">var</span> subscriberRegEx1Ticket = bus.RegisterSubscriber&lt;<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">string</span>&gt;(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">new</span> MessageNameMatchingWithRegularExpression(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"[Hh]ello"</span>), SubscriberRegEx1);</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vbnet"><span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Dim</span> subscriberRegEx1Ticket = bus.RegisterSubscriber(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Of</span> <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">String</span>)(<span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">New</span> MessageNameMatchingWithRegularExpression(<span class="literal" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">"[Hh]ello"</span>), <span class="keyword" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">AddressOf</span> SubscriberRegEx1)</code></pre></div></div><p>Expression <q>[Hh]ello</q> matches the value provided with publisher <q>Hello</q> while expression <q>hello</q> does not.</p><h4 id="MatchingBase" class="quickLinkHeader">User Defined</h4><p>When complex model is required, uses your own class derived from <a href="T_SecretNest_MessageBus_MessageNameMatching_MessageNameMatcherBase.htm">MessageNameMatcherBase</a>. <a href="M_SecretNest_MessageBus_MessageNameMatching_MessageNameMatcherBase_IsComplied.htm">IsComplied</a> is called for each message name to be checked.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="4c02af66-f784-4908-8806-39f16ea0591e.htm">Welcome to the Message Bus</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Name Matching</a></li><li><a class="quickLink">Matching Method</a><ul class="menu"><li><a class="quickLink">Exact Matching</a></li><li><a class="quickLink">String Matching</a></li><li><a class="quickLink">All Matching</a></li><li><a class="quickLink">Regular Expression Matching</a></li><li><a class="quickLink">User Defined</a></li></ul></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>