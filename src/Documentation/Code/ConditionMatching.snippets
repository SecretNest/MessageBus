<?xml version="1.0" encoding="utf-8" ?>
<!-- This is an example code snippets file -->
<!-- ReSharper disable MarkupTextTypo -->
<examples>
  <item id="ConditionMatching#All">
    <sampleCode language="CSharp">
      public void TestMethod()
      {
          using var bus = new MessageBus();
          var subscriber1000Ticket = bus.RegisterSubscriber&lt;int, int&gt;("ConditionMatching", Subscriber1000,
              new MessageBusSubscriberOptions&lt;int, int&gt;(sequence: 0, conditionCheckingCallback: i =&gt; i is int and &gt; 1000));
          var subscriber100Ticket = bus.RegisterSubscriber&lt;int, int&gt;("ConditionMatching", Subscriber100,
              new MessageBusSubscriberOptions&lt;int, int&gt;(sequence: 1, conditionCheckingCallback: i =&gt; i is int and &gt; 100));

          var publisherTicket = bus.RegisterPublisher&lt;int, int&gt;("ConditionMatching", new MessageBusPublisherOptions&lt;int, int&gt;(defaultReturnValue: 5));

          var result1000 = publisherTicket.Executor.Execute(1500);
          var result100 = publisherTicket.Executor.Execute(300);
          var result5 = publisherTicket.Executor.Execute(80);

          //after being executed: result1000 == 1000, result 100 == 100, result5 == 5

          bus.UnregisterPublisher(publisherTicket);
          bus.UnregisterSubscriber(subscriber1000Ticket);
          bus.UnregisterSubscriber(subscriber100Ticket);
      }

      public int Subscriber1000(int argument)
      {
          return 1000;
      }

      public int Subscriber100(int argument)
      {
          return 100;
      }
    </sampleCode>
    <sampleCode language="VisualBasic">
      Public Sub TestMethod()
        Using bus As New MessageBus
          Dim subscriber1000Ticket = bus.RegisterSubscriber(Of Integer, Integer)("ConditionMatching", AddressOf Subscriber1000, New MessageBusSubscriberOptions(Of Integer, Integer)(sequence:=0, conditionCheckingCallback:=Function(i) i > 1000))
          Dim subscriber100Ticket = bus.RegisterSubscriber(Of Integer, Integer)("ConditionMatching", AddressOf Subscriber100, New MessageBusSubscriberOptions(Of Integer, Integer)(sequence:=1, conditionCheckingCallback:=Function(i) i > 100))

          Dim publisherTicket = bus.RegisterPublisher(Of Integer, Integer)("ConditionMatching", New MessageBusPublisherOptions(Of Integer, Integer)(defaultReturnValue:=5))

          Dim result1000 = publisherTicket.Executor.Execute(1500)
          Dim result100 = publisherTicket.Executor.Execute(300)
          Dim result5 = publisherTicket.Executor.Execute(80)

          'after being executed: result1000 = 1000, result100 = 100, result5 = 5

          bus.UnregisterPublisher(publisherTicket)
          bus.UnregisterSubscriber(subscriber1000Ticket)
          bus.UnregisterSubscriber(subscriber100Ticket)
        End Using
      End Sub

      Public Function Subscriber1000(argument As Integer) As Integer
        Return 1000
      End Function

      Public Function Subscriber100(argument As Integer) As Integer
        Return 100
      End Function
    </sampleCode>
  </item>
</examples>